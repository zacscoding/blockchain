version: '2'

services:
  ## Tools (configtxgen, configtxlator)
  configtxlator:
    image: hyperledger/fabric-tools${IMAGE_TAG_FABRIC}
    #command: /usr/local/bin/configtxlator start
    command: sh -c '
      cp -r /opt/gopath/src/github.com/hyperledger/fabric/msp/crypto-config /etc/hyperledger/fabric;
      /usr/local/bin/configtxlator start'
    volumes:
      - ./crypto-config/:/opt/gopath/src/github.com/hyperledger/fabric/msp/crypto-config
    container_name: configtxlator
    network_mode: host

    ## Zookeeper
  zookeeper0.example.com:
    container_name: zookeeper0.example.com
    image: hyperledger/fabric-zookeeper:${IMAGE_TAG_FABRIC_ZOOKEEPER}
    environment:
      - TZ=Asia/Seoul
      - ZOO_MY_ID=0
      - ZOO_SERVERS=server.0=0.0.0.0:2888:3888
    ports:
      - "2181:2181"
    volumes:
      - ./temp-zookeeper/data:/data
      - ./temp-zookeeper/datalog:/datalog

  ## Kafka
  kafka0.example.com:
    container_name: kafka0.example.com
    image: hyperledger/fabric-kafka:${IMAGE_TAG_FABRIC_KAFKA}
    environment:
      - TZ=Asia/Seoul
      - KAFKA_ADVERTISED_HOST_NAME=kafka0.example.com
      - KAFKA_ADVERTISED_HOST_PORT=9092
      - KAFKA_MESSAGE_MAX_BYTES=103809024
      - KAFKA_REPLICA_FETCH_MAX_BYTES=103809024
      - KAFKA_UNCLEAN_LEADER_ELECTION_ENABLE=true
      - KAFKA_BROKER_ID=0
      - KAFKA_MIN_INSYNC_REPLICAS=1
      - KAFKA_DEFAULT_REPLICATION_FACTOR=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper0.example.com:2181
    ports:
      - "9092:9092"
    volumes:
      - ./temp-kafka/logs-kafka:/tmp/kafka-logs
    depends_on:
      - zookeeper0.example.com

  ## Orderer
  orderer1.ordererorg1.example.com:
    container_name: orderer1.ordererorg1.example.com
    image: hyperledger/fabric-orderer${IMAGE_TAG_FABRIC}
    environment:
      # - ORDERER_GENERAL_LOGLEVEL=debug
      - FABRIC_LOGGING_SPEC=DEBUG
      # - ORDERER_GENERAL_LOGLEVEL=error
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/etc/hyperledger/configtx/genesis.block
      - ORDERER_GENERAL_LOCALMSPID=ordererorg1
      - ORDERER_GENERAL_LOCALMSPDIR=/etc/hyperledger/msp/orderer/msp
      #- ORDERER_GENERAL_TLS_ENABLED=${ORG_HYPERLEDGER_FABRIC_SDKTEST_INTEGRATIONTESTS_TLS}
      - ORDERER_GENERAL_TLS_ENABLED=false
      - GRPC_TRACE=all=true,
      - GRPC_VERBOSITY=debug
      - ORDERER_GENERAL_AUTHENTICATION_TIMEWINDOW=3600s #Not for production -- remove.
      - ORDERER_KAFKA_TOPIC_REPLICATIONFACTOR=1
      - ORDERER_KAFKA_VERBOSE=true
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    hostname: orderer1.ordererorg1.example.com
    ports:
      - "7050:7050"
    command: orderer
    volumes:
      # /home/zaccoding/git/work/platform/hp_api/server/src/test/fixture/channelintegration
      - ./configtx:/etc/hyperledger/configtx:ro
      - ./crypto-config/ordererOrganizations/ordererorg1.example.com/orderers/orderer1.ordererorg1.example.com/:/etc/hyperledger/msp/orderer:ro
    depends_on:
      - kafka0.example.com

  orderer1.ordererorg2.example.com:
    container_name: orderer1.ordererorg2.example.com
    image: hyperledger/fabric-orderer${IMAGE_TAG_FABRIC}
    environment:
      # - ORDERER_GENERAL_LOGLEVEL=debug
      - FABRIC_LOGGING_SPEC=DEBUG
      # - ORDERER_GENERAL_LOGLEVEL=error
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/etc/hyperledger/configtx/genesis.block
      - ORDERER_GENERAL_LOCALMSPID=ordererorg2
      - ORDERER_GENERAL_LOCALMSPDIR=/etc/hyperledger/msp/orderer/msp
      #- ORDERER_GENERAL_TLS_ENABLED=${ORG_HYPERLEDGER_FABRIC_SDKTEST_INTEGRATIONTESTS_TLS}
      - ORDERER_GENERAL_TLS_ENABLED=false
      - GRPC_TRACE=all=true,
      - GRPC_VERBOSITY=debug
      - ORDERER_GENERAL_AUTHENTICATION_TIMEWINDOW=3600s #Not for production -- remove.
      - ORDERER_KAFKA_TOPIC_REPLICATIONFACTOR=1
      - ORDERER_KAFKA_VERBOSE=true
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    hostname: orderer1.ordererorg2.example.com
    ports:
      - "8050:7050"
    command: orderer
    volumes:
      # /home/zaccoding/git/work/platform/hp_api/server/src/test/fixture/channelintegration
      - ./configtx:/etc/hyperledger/configtx:ro
      - ./crypto-config/ordererOrganizations/ordererorg2.example.com/orderers/orderer1.ordererorg2.example.com/:/etc/hyperledger/msp/orderer:ro
    depends_on:
      - kafka0.example.com

  # peer1 - PeerOrg1
  peer1.peerorg1.example.com:
    container_name: peer1.peerorg1.example.com
    extends:
      file: peer-base/peer-base.yaml
      service: peer-base
    environment:
      - CORE_PEER_ID=peer1.peerorg1.example.com
      - CORE_PEER_ADDRESS=peer1.peerorg1.example.com:7051
      - CORE_PEER_LISTENADDRESS=peer1.peerorg1.example.com:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.peerorg1.example.com:7051
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer1.peerorg1.example.com:7051
      - CORE_PEER_LOCALMSPID=peerorg1
    hostname: peer1.peerorg1.example.com
    volumes:
      - /var/run/:/host/var/run/
      - ./crypto-config/peerOrganizations/peerorg1.example.com/peers/peer0.peerorg1.example.com:/etc/hyperledger/msp/peer:ro
    ports:
      - 7051:7051
